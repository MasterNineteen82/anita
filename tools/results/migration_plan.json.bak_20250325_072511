{
  "services": [
    {
      "source": "k:\\anita\\poc\\backend\\auth\\anti_spoofing_manager.py",
      "destination": "backend/domain/services/anti_spoofing_service.py",
      "transformation": "class_to_service",
      "notes": "Transform manager class to service pattern with repositories"
    },
    {
      "source": "k:\\anita\\poc\\backend\\auth\\auth_manager.py",
      "destination": "backend/domain/services/auth_service.py",
      "transformation": "class_to_service",
      "notes": "Transform manager class to service pattern with repositories"
    },
    {
      "source": "k:\\anita\\poc\\backend\\caching\\cache_manager.py",
      "destination": "backend/domain/services/cache_service.py",
      "transformation": "class_to_service",
      "notes": "Transform manager class to service pattern with repositories"
    },
    {
      "source": "k:\\anita\\poc\\backend\\modules\\alert_manager.py",
      "destination": "backend/domain/services/alert_service.py",
      "transformation": "class_to_service",
      "notes": "Transform manager class to service pattern with repositories"
    },
    {
      "source": "k:\\anita\\poc\\backend\\modules\\auth_manager.py",
      "destination": "backend/domain/services/auth_service.py",
      "transformation": "class_to_service",
      "notes": "Transform manager class to service pattern with repositories"
    },
    {
      "source": "k:\\anita\\poc\\backend\\modules\\backup_manager.py",
      "destination": "backend/domain/services/backup_service.py",
      "transformation": "class_to_service",
      "notes": "Transform manager class to service pattern with repositories"
    },
    {
      "source": "k:\\anita\\poc\\backend\\modules\\biometric_manager.py",
      "destination": "backend/domain/services/biometric_service.py",
      "transformation": "class_to_service",
      "notes": "Transform manager class to service pattern with repositories"
    },
    {
      "source": "k:\\anita\\poc\\backend\\modules\\ble_manager.py",
      "destination": "backend/domain/services/ble_service.py",
      "transformation": "class_to_service",
      "notes": "Transform manager class to service pattern with repositories"
    },
    {
      "source": "k:\\anita\\poc\\backend\\modules\\cache_manager.py",
      "destination": "backend/domain/services/cache_service.py",
      "transformation": "class_to_service",
      "notes": "Transform manager class to service pattern with repositories"
    },
    {
      "source": "k:\\anita\\poc\\backend\\modules\\card_manager.py",
      "destination": "backend/domain/services/card_service.py",
      "transformation": "class_to_service",
      "notes": "Transform manager class to service pattern with repositories"
    },
    {
      "source": "k:\\anita\\poc\\backend\\modules\\device_manager.py",
      "destination": "backend/domain/services/device_service.py",
      "transformation": "class_to_service",
      "notes": "Transform manager class to service pattern with repositories"
    },
    {
      "source": "k:\\anita\\poc\\backend\\modules\\facial_recognition_manager.py",
      "destination": "backend/domain/services/facial_recognition_service.py",
      "transformation": "class_to_service",
      "notes": "Transform manager class to service pattern with repositories"
    },
    {
      "source": "k:\\anita\\poc\\backend\\modules\\fingerprint_manager.py",
      "destination": "backend/domain/services/fingerprint_service.py",
      "transformation": "class_to_service",
      "notes": "Transform manager class to service pattern with repositories"
    },
    {
      "source": "k:\\anita\\poc\\backend\\modules\\iris_manager.py",
      "destination": "backend/domain/services/iris_service.py",
      "transformation": "class_to_service",
      "notes": "Transform manager class to service pattern with repositories"
    },
    {
      "source": "k:\\anita\\poc\\backend\\modules\\mifare_manager.py",
      "destination": "backend/domain/services/mifare_service.py",
      "transformation": "class_to_service",
      "notes": "Transform manager class to service pattern with repositories"
    },
    {
      "source": "k:\\anita\\poc\\backend\\modules\\mqtt_manager.py",
      "destination": "backend/domain/services/mqtt_service.py",
      "transformation": "class_to_service",
      "notes": "Transform manager class to service pattern with repositories"
    },
    {
      "source": "k:\\anita\\poc\\backend\\modules\\nfc_manager.py",
      "destination": "backend/domain/services/nfc_service.py",
      "transformation": "class_to_service",
      "notes": "Transform manager class to service pattern with repositories"
    },
    {
      "source": "k:\\anita\\poc\\backend\\modules\\notification_manager.py",
      "destination": "backend/domain/services/notification_service.py",
      "transformation": "class_to_service",
      "notes": "Transform manager class to service pattern with repositories"
    },
    {
      "source": "k:\\anita\\poc\\backend\\modules\\palm_manager.py",
      "destination": "backend/domain/services/palm_service.py",
      "transformation": "class_to_service",
      "notes": "Transform manager class to service pattern with repositories"
    },
    {
      "source": "k:\\anita\\poc\\backend\\modules\\report_manager.py",
      "destination": "backend/domain/services/report_service.py",
      "transformation": "class_to_service",
      "notes": "Transform manager class to service pattern with repositories"
    },
    {
      "source": "k:\\anita\\poc\\backend\\modules\\rfid_manager.py",
      "destination": "backend/domain/services/rfid_service.py",
      "transformation": "class_to_service",
      "notes": "Transform manager class to service pattern with repositories"
    },
    {
      "source": "k:\\anita\\poc\\backend\\modules\\settings_manager.py",
      "destination": "backend/domain/services/settings_service.py",
      "transformation": "class_to_service",
      "notes": "Transform manager class to service pattern with repositories"
    },
    {
      "source": "k:\\anita\\poc\\backend\\modules\\smartcard_manager.py",
      "destination": "backend/domain/services/smartcard_service.py",
      "transformation": "class_to_service",
      "notes": "Transform manager class to service pattern with repositories"
    },
    {
      "source": "k:\\anita\\poc\\backend\\modules\\system_manager.py",
      "destination": "backend/domain/services/system_service.py",
      "transformation": "class_to_service",
      "notes": "Transform manager class to service pattern with repositories"
    },
    {
      "source": "k:\\anita\\poc\\backend\\modules\\task_manager.py",
      "destination": "backend/domain/services/task_service.py",
      "transformation": "class_to_service",
      "notes": "Transform manager class to service pattern with repositories"
    },
    {
      "source": "k:\\anita\\poc\\backend\\modules\\update_manager.py",
      "destination": "backend/domain/services/update_service.py",
      "transformation": "class_to_service",
      "notes": "Transform manager class to service pattern with repositories"
    },
    {
      "source": "k:\\anita\\poc\\backend\\modules\\uwb_manager.py",
      "destination": "backend/domain/services/uwb_service.py",
      "transformation": "class_to_service",
      "notes": "Transform manager class to service pattern with repositories"
    },
    {
      "source": "k:\\anita\\poc\\backend\\security\\security_manager.py",
      "destination": "backend/domain/services/security_service.py",
      "transformation": "class_to_service",
      "notes": "Transform manager class to service pattern with repositories"
    },
    {
      "source": "k:\\anita\\poc\\backend\\ws\\manager.py",
      "destination": "MANUAL_REVIEW_NEEDED",
      "transformation": "manual",
      "notes": "Needs manual assessment for proper placement"
    }
  ],
  "models": [
    {
      "source": "k:\\anita\\poc\\backend\\models.py",
      "destination": "backend/domain/models/models.py",
      "transformation": "model_update",
      "notes": "Update model imports and organization"
    },
    {
      "source": "k:\\anita\\poc\\backend\\config\\settings_models.py",
      "destination": "backend/domain/models/settings_models.py",
      "transformation": "model_update",
      "notes": "Update model imports and organization"
    }
  ],
  "endpoints": [
    {
      "source": "k:\\anita\\poc\\backend\\routes\\routes.py",
      "destination": "MANUAL_REVIEW_NEEDED",
      "transformation": "manual",
      "notes": "Needs manual assessment for proper placement"
    },
    {
      "source": "k:\\anita\\poc\\backend\\routes\\api\\alerts_routes.py",
      "destination": "MANUAL_REVIEW_NEEDED",
      "transformation": "manual",
      "notes": "Needs manual assessment for proper placement"
    },
    {
      "source": "k:\\anita\\poc\\backend\\routes\\api\\biometric_routes.py",
      "destination": "MANUAL_REVIEW_NEEDED",
      "transformation": "manual",
      "notes": "Needs manual assessment for proper placement"
    },
    {
      "source": "k:\\anita\\poc\\backend\\routes\\api\\ble_routes.py",
      "destination": "MANUAL_REVIEW_NEEDED",
      "transformation": "manual",
      "notes": "Needs manual assessment for proper placement"
    },
    {
      "source": "k:\\anita\\poc\\backend\\routes\\api\\cache_routes.py",
      "destination": "MANUAL_REVIEW_NEEDED",
      "transformation": "manual",
      "notes": "Needs manual assessment for proper placement"
    },
    {
      "source": "k:\\anita\\poc\\backend\\routes\\api\\card_routes.py",
      "destination": "MANUAL_REVIEW_NEEDED",
      "transformation": "manual",
      "notes": "Needs manual assessment for proper placement"
    },
    {
      "source": "k:\\anita\\poc\\backend\\routes\\api\\device_routes.py",
      "destination": "MANUAL_REVIEW_NEEDED",
      "transformation": "manual",
      "notes": "Needs manual assessment for proper placement"
    },
    {
      "source": "k:\\anita\\poc\\backend\\routes\\api\\hardware_routes.py",
      "destination": "MANUAL_REVIEW_NEEDED",
      "transformation": "manual",
      "notes": "Needs manual assessment for proper placement"
    },
    {
      "source": "k:\\anita\\poc\\backend\\routes\\api\\mifare.py",
      "destination": "MANUAL_REVIEW_NEEDED",
      "transformation": "manual",
      "notes": "Needs manual assessment for proper placement"
    },
    {
      "source": "k:\\anita\\poc\\backend\\routes\\api\\mifare_routes.py",
      "destination": "MANUAL_REVIEW_NEEDED",
      "transformation": "manual",
      "notes": "Needs manual assessment for proper placement"
    },
    {
      "source": "k:\\anita\\poc\\backend\\routes\\api\\monitoring_router.py",
      "destination": "MANUAL_REVIEW_NEEDED",
      "transformation": "manual",
      "notes": "Needs manual assessment for proper placement"
    },
    {
      "source": "k:\\anita\\poc\\backend\\routes\\api\\mqtt_routes.py",
      "destination": "MANUAL_REVIEW_NEEDED",
      "transformation": "manual",
      "notes": "Needs manual assessment for proper placement"
    },
    {
      "source": "k:\\anita\\poc\\backend\\routes\\api\\nfc_routes.py",
      "destination": "MANUAL_REVIEW_NEEDED",
      "transformation": "manual",
      "notes": "Needs manual assessment for proper placement"
    },
    {
      "source": "k:\\anita\\poc\\backend\\routes\\api\\rfid_routes.py",
      "destination": "MANUAL_REVIEW_NEEDED",
      "transformation": "manual",
      "notes": "Needs manual assessment for proper placement"
    },
    {
      "source": "k:\\anita\\poc\\backend\\routes\\api\\simulation_routes.py",
      "destination": "MANUAL_REVIEW_NEEDED",
      "transformation": "manual",
      "notes": "Needs manual assessment for proper placement"
    },
    {
      "source": "k:\\anita\\poc\\backend\\routes\\api\\smartcard.py",
      "destination": "MANUAL_REVIEW_NEEDED",
      "transformation": "manual",
      "notes": "Needs manual assessment for proper placement"
    },
    {
      "source": "k:\\anita\\poc\\backend\\routes\\api\\smartcard_routes.py",
      "destination": "MANUAL_REVIEW_NEEDED",
      "transformation": "manual",
      "notes": "Needs manual assessment for proper placement"
    },
    {
      "source": "k:\\anita\\poc\\backend\\routes\\api\\system_routes.py",
      "destination": "MANUAL_REVIEW_NEEDED",
      "transformation": "manual",
      "notes": "Needs manual assessment for proper placement"
    },
    {
      "source": "k:\\anita\\poc\\backend\\routes\\api\\uwb_routes.py",
      "destination": "MANUAL_REVIEW_NEEDED",
      "transformation": "manual",
      "notes": "Needs manual assessment for proper placement"
    },
    {
      "source": "k:\\anita\\poc\\backend\\routes\\ui\\pages.py",
      "destination": "MANUAL_REVIEW_NEEDED",
      "transformation": "manual",
      "notes": "Needs manual assessment for proper placement"
    }
  ],
  "websockets": [
    {
      "source": "k:\\anita\\poc\\backend\\routes\\websockets\\smartcard_ws.py",
      "destination": "backend/api/websockets/smartcard_ws.py",
      "transformation": "websocket_adapter",
      "notes": "Adapt WebSocket handler to new structure with DI"
    },
    {
      "source": "k:\\anita\\poc\\backend\\ws\\uwb_socket.py",
      "destination": "backend/api/websockets/uwb_socket.py",
      "transformation": "websocket_adapter",
      "notes": "Adapt WebSocket handler to new structure with DI"
    }
  ],
  "repositories": [],
  "utilities": [
    {
      "source": "k:\\anita\\poc\\backend\\main.py",
      "destination": "MANUAL_REVIEW_NEEDED",
      "transformation": "manual",
      "notes": "Needs manual assessment for proper placement"
    },
    {
      "source": "k:\\anita\\poc\\backend\\hardware\\hardware_interface.py",
      "destination": "MANUAL_REVIEW_NEEDED",
      "transformation": "manual",
      "notes": "Needs manual assessment for proper placement"
    },
    {
      "source": "k:\\anita\\poc\\backend\\logging\\logging_scripts\\debug_analyzer.py",
      "destination": "MANUAL_REVIEW_NEEDED",
      "transformation": "manual",
      "notes": "Needs manual assessment for proper placement"
    },
    {
      "source": "k:\\anita\\poc\\backend\\logging\\logging_scripts\\log_maintenance.py",
      "destination": "MANUAL_REVIEW_NEEDED",
      "transformation": "manual",
      "notes": "Needs manual assessment for proper placement"
    },
    {
      "source": "k:\\anita\\poc\\backend\\modules\\biometric_fusion.py",
      "destination": "MANUAL_REVIEW_NEEDED",
      "transformation": "manual",
      "notes": "Needs manual assessment for proper placement"
    },
    {
      "source": "k:\\anita\\poc\\backend\\modules\\card_crypto.py",
      "destination": "MANUAL_REVIEW_NEEDED",
      "transformation": "manual",
      "notes": "Needs manual assessment for proper placement"
    },
    {
      "source": "k:\\anita\\poc\\backend\\modules\\monitoring.py",
      "destination": "MANUAL_REVIEW_NEEDED",
      "transformation": "manual",
      "notes": "Needs manual assessment for proper placement"
    },
    {
      "source": "k:\\anita\\poc\\backend\\modules\\monitors.py",
      "destination": "MANUAL_REVIEW_NEEDED",
      "transformation": "manual",
      "notes": "Needs manual assessment for proper placement"
    },
    {
      "source": "k:\\anita\\poc\\backend\\modules\\task_scheduler.py",
      "destination": "MANUAL_REVIEW_NEEDED",
      "transformation": "manual",
      "notes": "Needs manual assessment for proper placement"
    },
    {
      "source": "k:\\anita\\poc\\backend\\performance\\performance_monitor.py",
      "destination": "MANUAL_REVIEW_NEEDED",
      "transformation": "manual",
      "notes": "Needs manual assessment for proper placement"
    },
    {
      "source": "k:\\anita\\poc\\backend\\routes\\utils.py",
      "destination": "backend/utils/utils.py",
      "transformation": "direct_move",
      "notes": "Move utility functions directly"
    },
    {
      "source": "k:\\anita\\poc\\backend\\security\\fraud_detection.py",
      "destination": "MANUAL_REVIEW_NEEDED",
      "transformation": "manual",
      "notes": "Needs manual assessment for proper placement"
    },
    {
      "source": "k:\\anita\\poc\\backend\\utils\\utils.py",
      "destination": "backend/utils/utils.py",
      "transformation": "direct_move",
      "notes": "Move utility functions directly"
    },
    {
      "source": "k:\\anita\\poc\\backend\\ws\\events.py",
      "destination": "MANUAL_REVIEW_NEEDED",
      "transformation": "manual",
      "notes": "Needs manual assessment for proper placement"
    },
    {
      "source": "k:\\anita\\poc\\backend\\ws\\factory.py",
      "destination": "MANUAL_REVIEW_NEEDED",
      "transformation": "manual",
      "notes": "Needs manual assessment for proper placement"
    }
  ],
  "security": [
    {
      "source": "k:\\anita\\poc\\backend\\auth.py",
      "destination": "backend/infrastructure/security/auth.py",
      "transformation": "security_adapter",
      "notes": "Adapt security component to new structure"
    },
    {
      "source": "k:\\anita\\poc\\backend\\auth\\blockchain_auth.py",
      "destination": "backend/infrastructure/security/blockchain_auth.py",
      "transformation": "security_adapter",
      "notes": "Adapt security component to new structure"
    },
    {
      "source": "k:\\anita\\poc\\backend\\routes\\api\\auth_routes.py",
      "destination": "backend/infrastructure/security/auth_routes.py",
      "transformation": "security_adapter",
      "notes": "Adapt security component to new structure"
    },
    {
      "source": "k:\\anita\\poc\\backend\\routes\\api\\security_routes.py",
      "destination": "backend/infrastructure/security/security_routes.py",
      "transformation": "security_adapter",
      "notes": "Adapt security component to new structure"
    },
    {
      "source": "k:\\anita\\poc\\backend\\security\\jwt_handler.py",
      "destination": "backend/infrastructure/security/jwt_handler.py",
      "transformation": "security_adapter",
      "notes": "Adapt security component to new structure"
    }
  ],
  "config": [
    {
      "source": "k:\\anita\\poc\\backend\\logging\\logging_config.py",
      "destination": "backend/core/config/logging_config.py",
      "transformation": "direct_move",
      "notes": "Move configuration directly"
    }
  ],
  "external": [],
  "database": [],
  "summary": {
    "total_files": 74,
    "services": 29,
    "models": 2,
    "endpoints": 20,
    "websockets": 2,
    "repositories": 0,
    "utilities": 15,
    "security": 5,
    "config": 1,
    "external": 0,
    "database": 0,
    "manual_review_needed": 34
  }
}